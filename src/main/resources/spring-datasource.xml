<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean id="mongoOptions" class="com.gochinatv.datasync.util.mongoUtil.MongoOptionsImp">
        <property name="autoConnectRetry">
            <value type="boolean">true</value>
        </property>
        <property name="connectionsPerHost">
            <value type="int">100</value>
        </property>
        <property name="maxWaitTime">
            <value type="int">5000</value>
        </property>
        <property name="socketTimeout">
            <value type="int">0</value>
        </property>
        <property name="threadsAllowedToBlockForConnectionMultiplier">
            <value type="int">50</value>
        </property>
        <property name="slaveOk">
            <value type="boolean">true</value>
        </property>
    </bean>

    <!-- adress-->
    <bean id="serverAddress" class="com.mongodb.ServerAddress">
        <constructor-arg name="host" value="${mongoDB.host}"/>
        <constructor-arg name="port" value="${mongoDB.port}"/>
    </bean>

    <!-- 数据库实例 -->
    <bean id="mongo" class="com.mongodb.Mongo">
        <constructor-arg name="addr" ref="serverAddress"/>
        <constructor-arg name="options" ref="mongoOptions"/>
    </bean>

    <!-- morphia实例 -->
    <bean id="morphia" class="com.google.code.morphia.Morphia"/>

    <bean id="ServerAddressUpload" class="com.mongodb.ServerAddress">
        <constructor-arg value="${mongoDB.host}" type="java.lang.String"/>
        <constructor-arg value="${mongoDB.port}" type="int"/>
    </bean>

    <!-- datastore实例 -->
    <bean id="dataStore" class="com.google.code.morphia.DatastoreImpl">
        <constructor-arg index="0" ref="morphia"/>
        <constructor-arg index="1" ref="mongo"/>
        <constructor-arg index="2" value="${mongo.db}"/>
      <!--   <constructor-arg index="3" value="${mongoDB.username}"/>
        <constructor-arg index="4" value="${mongoDB.password}"/> -->
    </bean>


    <!--mysql config-->
    <!-- 配置数据源 -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${database.jdbcUrl}"/>
        <property name="username" value="${database.user}"/>
        <property name="password" value="${database.password}"/>
        <property name="initialSize" value="${database.initialPoolSize}"/>
        <property name="maxActive" value="20"/>
        <property name="minIdle" value="1"/>
        <property name="maxWait" value="60000"/>
        <property name="validationQuery" value="${database.preferredTestQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="25200000"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="logAbandoned" value="true"/>
        <property name="filters" value="mergeStat"/>
    </bean>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.gochinatv.datasync.dao.sqlDao"/>
    </bean>

    <tx:annotation-driven/>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>


</beans>